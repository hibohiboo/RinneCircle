directive @spectaql(
  options: [SpectaQLOption]
) on QUERY | MUTATION | SUBSCRIPTION | FIELD | FRAGMENT_DEFINITION | FRAGMENT_SPREAD | INLINE_FRAGMENT | VARIABLE_DEFINITION | SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

input SpectaQLOption {
  key: String!
  value: String!
}

"This is a `DateTime` scalar"
scalar DateTime

scalar URL @spectaql(options: [{ key: "example", value: "https://work.com" }])
scalar JSON
scalar JSONObject
scalar Void
"UUIDの文字列"
scalar UUID
"Firebase Authのuid"
scalar UID

"Something interesting about my `Queries`."
type Query {
  "This Query has the same name as a Mutation"
  stringThing: String
}

type Mutation {
  upsertPostRinneScenario(
    object: RinneScenarioInput!
    on_conflict: RinneScenario_on_conflict
  ): RinneScenario
}
input RinneScenarioInput {
  id: UUID!
  authorId: UID!
  title: String!
  path: String!
  imageUrl: String!
  published: Boolean!
  updatedAt: String!
}

input RinneScenario_on_conflict {
  constraint: RinneScenario_constraint!
  update_columns: [RinneScenario_update_column!]
}

enum RinneScenario_constraint {
  RinneScenario_pkey
}

enum RinneScenario_update_column {
  title
  published
  updatedAt
}

type RinneScenario {
  id: UUID!
}
